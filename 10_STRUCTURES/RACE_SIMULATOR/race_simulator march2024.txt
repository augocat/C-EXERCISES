#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Structures section
struct Race {
  int numberOfLaps;
  int currentLap;
  char firstPlaceDriverName[20];
  char firstPlaceRaceCarColor[20];
};

struct RaceCar {
  char carName[20];
  char raceCarColor[20];
  int totalLapTime;
};

// Print functions section
void startRace(struct RaceCar*, struct RaceCar*);
void updateFirstPlace(struct Race*, struct RaceCar*, struct RaceCar*);
void updateRaceCar(struct RaceCar*);
void printCongratulation(struct Race);
void printFirstPlaceAfterLap(struct Race);

void printIntro(void) {
  printf("Welcome to our main event digital race fans!\nI hope everybody has their snacks because we are about to begin!\n");
}

void printCountDown(void) {
  printf("Racers Ready!\nIn...\n5\n4\n3\n2\n1\nRace!\n");
}

void printFirstPlaceAfterLap(struct Race race) {
  printf("After lap number %d\nFirst Place Is: %s in the %s race car!\n", race.currentLap, race.firstPlaceDriverName, race.firstPlaceRaceCarColor);
}

void printCongratulation(struct Race race) {
  printf("Let's all congratulate %s in the %s race car for an amazing performance.\nIt truly was a great race and everybody have a goodnight!\n", race.firstPlaceDriverName, race.firstPlaceRaceCarColor);
}
// Logic functions section
int calculateTimeToCompleteLap(void) {
  int speed = rand() % 3 + 1;
  int acceleration = rand() % 3 + 1;
  int nerves = rand() % 3 + 1;
  printf("%d %d %d\n", speed, acceleration, nerves);
  return speed + acceleration + nerves;
}

void updateRaceCar(struct RaceCar* raceCar) {
  raceCar -> totalLapTime += calculateTimeToCompleteLap();
  }

void updateFirstPlace(struct Race* race, struct RaceCar* raceCar1, struct RaceCar* raceCar2) {
  printf("Total lap time 1st place = %d\n", raceCar1 -> totalLapTime);
  printf("Total lap time 2nd place = %d\n", raceCar2 -> totalLapTime);
  if (raceCar1 -> totalLapTime <= raceCar2 -> totalLapTime) {
      strcpy(race -> firstPlaceDriverName, raceCar1 -> carName);
    strcpy(race -> firstPlaceRaceCarColor, raceCar1 -> raceCarColor);
  } else {
    strcpy(race -> firstPlaceDriverName, raceCar2 -> carName);
  strcpy(race -> firstPlaceRaceCarColor, raceCar2 -> raceCarColor);
  }
}

void startRace(struct RaceCar* raceCar1, struct RaceCar* raceCar2) {
  struct Race race = {6, 1 , "", ""};
  for (int n = 1; n <= race.numberOfLaps; n++) {
    updateRaceCar(raceCar1);
    updateRaceCar(raceCar2);
    updateFirstPlace(&race, raceCar1, raceCar2);
    race.currentLap = n;
    printFirstPlaceAfterLap(race);
  }
  printCongratulation(race);
}

int main() {
 srand(time(0));

  struct RaceCar Lambourgini = {"Lambourgini", "Red"};
  struct RaceCar Fherrari = {"Fherrari", "Green"};
  
  
  
  printIntro();
  
  printCountDown();
  
  startRace(&Lambourgini, &Fherrari);
  
    
};